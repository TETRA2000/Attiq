buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo' }
        maven { url "https://jitpack.io" }
        maven { url "http://amateras.sourceforge.jp/mvn" }
        mavenCentral()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.3.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.getkeepsafe.dexcount'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven {
        url "http://maven.batch.com/release"
    }
}

def VERSION_CODE = 10000
def VERSION_NAME = "1.0.0"

android {
    signingConfigs {
        release {

        }

        debug {
            keyAlias "debug"
            keyPassword "android"
            storeFile file("debug.jks")
            storePassword "android"
        }
    }

    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    publishNonDefault true
    defaultConfig {
        applicationId "im.ene.lab.attiq"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode VERSION_CODE
        versionName VERSION_NAME
        manifestPlaceholders = [fabric_api_key: "${attiq_fabric_api_key}"]
        multiDexEnabled false
        resValue "string", "attiq_gcm_sender_id", "${attiq_gcm_sender_id}"
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    buildTypes {

        release {
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules-release.pro'
            resValue "string", "attiq_mopub_add_id", "${attiq_mopub_ad_unit_id}"
            resValue "string", "ga_track_id", "${attiq_ga_track_id_release}"

            resValue "string", "batch_com_api_key", "${attiq_batch_com_api_key_live}"
            resValue "string", "batch_com_scheme", "${attiq_batch_com_scheme}"
        }

        prerelease {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "attiq_mopub_add_id", "6eaafa8a1f9d44d2961112d17f3fd168"
            resValue "string", "ga_track_id", "${attiq_ga_track_id_debug}"

            resValue "string", "batch_com_api_key", "${attiq_batch_com_api_key_dev}"
            resValue "string", "batch_com_scheme", "${attiq_batch_com_scheme}"
        }

        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "attiq_mopub_add_id", "6eaafa8a1f9d44d2961112d17f3fd168"
            resValue "string", "ga_track_id", "${attiq_ga_track_id_debug}"

            resValue "string", "batch_com_api_key", "${attiq_batch_com_api_key_dev}"
            resValue "string", "batch_com_scheme", "${attiq_batch_com_scheme}"
        }
    }
    productFlavors {
        prod {
            applicationId "im.ene.lab.attiq"
            minSdkVersion 21
            targetSdkVersion 23
        }
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
        disable 'PrivateResource'
        disable 'MissingTranslation'    // should un-comment later to improve App
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name.equals("release")) {
            variant.outputs.each { output ->
                if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                    // Rename APK
                    def applicationId = defaultConfig.applicationId
                    def versionCode = defaultConfig.versionCode
                    def versionName = defaultConfig.versionName
                    def date = new java.text.SimpleDateFormat("yyyyMMdd_HHmm").format(new Date())
                    def newName = "${applicationId}_r${versionCode}_v${versionName}_${date}.apk"

                    def publish = project.tasks.create("publishAll")

                    // Move and Rename APK
                    def task = project.tasks.create("publish${variant.name.capitalize()}Apk", Copy)
                    task.from(output.outputFile)
                    task.rename(output.outputFile.name, newName)
                    task.into(file("${attiq_apk_output_path}/${variant.name}/apk").getAbsolutePath())

                    task.dependsOn variant.assemble
                    publish.dependsOn task

                    // Move ProGuard
                    if (variant.buildType.minifyEnabled) {
                        def copyTask = project.tasks.create("copy${variant.name.capitalize()}MappingText", Copy)
                        def buildTypeName = variant.buildType.name
                        copyTask.from(file("build/outputs/proguard/${buildTypeName}").path)
                        copyTask.into(file("${variant.name}/proguard").getAbsolutePath())

                        copyTask.dependsOn variant.assemble
                        task.dependsOn copyTask
                    }
                }
            }
        }
    }
}

def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('storeFile') && props.containsKey('storePassword') &&
            props.containsKey('keyAlias') && props.containsKey('keyPassword')) {
        android.signingConfigs.release.storeFile = file(props['storeFile'])
        android.signingConfigs.release.storePassword = props['storePassword']
        android.signingConfigs.release.keyAlias = props['keyAlias']
        android.signingConfigs.release.keyPassword = props['keyPassword']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

ext {
    support_libraries_version = '23.1.1'
    okhttp3_version = "3.0.1"
    retrofit2_version = "2.0.0-beta4"
    service_version = "8.4.0"
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'

    compile "com.google.android.gms:play-services-gcm:${service_version}"
    compile "com.google.android.gms:play-services-analytics:${service_version}"
    // compile "com.google.android.gms:play-services-ads:${service_version}"

    compile "com.android.support:support-v4:${support_libraries_version}"
    compile "com.android.support:appcompat-v7:${support_libraries_version}"
    compile "com.android.support:design:${support_libraries_version}"
    // compile "com.android.support:palette-v7:${support_libraries_version}"
    compile "com.android.support:recyclerview-v7:${support_libraries_version}"
    // compile "com.android.support:customtabs:${support_libraries_version}"

    compile "com.squareup.retrofit2:retrofit:${retrofit2_version}"
    compile "com.squareup.okhttp3:okhttp:${okhttp3_version}"
    compile "com.squareup.retrofit2:converter-gson:${retrofit2_version}"
    compile "com.jakewharton:butterknife:7.0.1"

    // compile 'com.github.bumptech.glide:glide:3.6.1'
    // compile 'com.github.bumptech.glide:okhttp-integration:1.3.1@aar'
    compile 'com.squareup.picasso:picasso:2.6.0-SNAPSHOT'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.1'

    compile('com.github.ozodrukh:CircularReveal:1.3.1@aar') {
        transitive = true;
    }

    compile 'com.sothree.slidinguppanel:library:3.2.1'
    compile 'com.wefika:flowlayout:0.4.1'
    compile 'com.google.code.gson:gson:2.5'
    compile 'org.jsoup:jsoup:1.8.3'

    compile 'io.github.gitbucket:markedj:1.0.6'
    compile 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'
    compile "de.greenrobot:eventbus:2.4.0"
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.3'

    compile "io.realm:realm-android:0.87.4"

    // compile "com.facebook.stetho:stetho:1.2.0"
    // compile "com.facebook.stetho:stetho-okhttp:1.2.0"
    // compile "com.uphyca:stetho_realm:0.7.2"

    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.2@aar') {
        transitive = true;
    }

    compile('com.mopub.sdk.android:mopub:4.2.0@aar') {
        transitive = true;
    }

    compile 'com.batch.android:batch-sdk:1.5.2'
}

apply plugin: 'com.google.gms.google-services'

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}